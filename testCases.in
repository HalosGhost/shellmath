################################################################
# The general testcase syntax is 
#    assertionType  expectedValue   functionUnderTest [args ... ]
#
# where assertionType is either of:
#    Code      to indicate decimal return code
#    String    to indicate the string generated as a side effect
#
# and functionUnderTest is the function name
# with the "_shellfloat_" prefix removed.
################################################################

################################
# Tests for SUPPORTING FUNCTIONS
################################

# Tests for getReturnCode()
Code 0   getReturnCode SUCCESS
Code 1   getReturnCode FAIL
Code 2   getReturnCode ILLEGAL_NUMBER

## Tests for warn()
String "Invalid decimal number argument: '2.qr'"  \
    warn "${__shellfloat_returnCodes[ILLEGAL_NUMBER]}" 2.qr

## Tests for validateAndParse():
## Validate a number, determine its type and sign, split it into parts

# Detect Invalid input
Code    2      validateAndParse NaN
String    ""   validateAndParse NaN
# Positive integers
String  "4"    validateAndParse 4
Code    64     validateAndParse 4
# Negative integers
String    9    validateAndParse -9
Code     65    validateAndParse -9
# Decimals
String  "4 2"  validateAndParse 4.2
Code    32     validateAndParse 4.2
# Negative decimals
Code    33     validateAndParse -4.2
# Scientific / exponential notation
String  "3 4 5"  validateAndParse 3.4e5
Code    16       validateAndParse 3.4e5
String  "3 4 5"  validateAndParse -3.4e5
Code    18       validateAndParse -3.4e5
# + signed exponents
String  "3 4 5"  validateAndParse 3.4e+5
Code    16       validateAndParse 3.4e+5
String  "3 4 5"  validateAndParse -3.4e+5
Code    18       validateAndParse -3.4e+5
# - signed exponents: negativity is reflected in Code
String  "3 4 5"  validateAndParse 3.4e-5
Code    17       validateAndParse 3.4e-5
String  "3 4 5"  validateAndParse -3.4e-5
Code    19       validateAndParse -3.4e-5

####################
# Tests for ADDITION
####################
String 4     add 4
String 9     add 4 5
String 2.214    add 1.105 1.109
# Negative with carry
String -3.8    add -1.9 -1.9
# "Point-zero" decimals' place-value trickiness
String 2.014    add 1.005 1.009

# Recursive/multiple addition
#String 6 add 1 2 3

